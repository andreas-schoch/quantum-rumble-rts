(()=>{"use strict";var e,t={313:(e,t,i)=>{i.d(t,{r:()=>F});var s=i(944);const r="energy_storage_change",o="energy_production_change",a="energy_consumption_change",n="unit_selection_change",l=1/3*1,h=16;var c;!function(e){e[e.TERRAIN=1]="TERRAIN",e[e.COLLECTION=2]="COLLECTION",e[e.COLLECTION_PREVIEW=3]="COLLECTION_PREVIEW",e[e.NETWORK=4]="NETWORK",e[e.AMMO_CIRCLE=5]="AMMO_CIRCLE",e[e.UNIT=6]="UNIT",e[e.PREVIEW_UNIT=7]="PREVIEW_UNIT",e[e.ENERGY=8]="ENERGY",e[e.UNIT_SELECTION_OUTLINE=9]="UNIT_SELECTION_OUTLINE",e[e.FLUID=10]="FLUID",e[e.EMITTER=11]="EMITTER",e[e.MORTAR_SHELL=12]="MORTAR_SHELL",e[e.PARTICLE_IMPACT=13]="PARTICLE_IMPACT",e[e.UNIT_MOVING=14]="UNIT_MOVING"}(c||(c={}));const d=1e3,u={elevationMax:12e3},p={overflow:12e3,flowRate:.6,evaporation:5},m=[{elevation:3e3,color:6641746},{elevation:6e3,color:7760227},{elevation:9e3,color:8878708},{elevation:12e3,color:9997189}],y=[{elevation:1e3,color:4227511,alpha:.4},{elevation:2e3,color:4227511,alpha:.4},{elevation:3e3,color:4227511,alpha:.4},{elevation:4e3,color:4227511,alpha:.4},{elevation:5e3,color:4227511,alpha:.4},{elevation:6e3,color:4227511,alpha:.4},{elevation:7e3,color:4227511,alpha:.4},{elevation:8e3,color:4227511,alpha:.4},{elevation:9e3,color:4227511,alpha:.4},{elevation:1e4,color:4227511,alpha:.4},{elevation:11e3,color:4227511,alpha:.4},{elevation:12e3,color:4227511,alpha:.4},{elevation:13e3,color:4227511,alpha:.4},{elevation:14e3,color:4227511,alpha:.4},{elevation:15e3,color:4227511,alpha:.4}],g={City:{unitName:"City",size:"9x9",spriteKeys:["City"],uiTextureKey:"City",buildCost:0,connectionRadius:19,collectionRadius:7,energyProduction:.8,energyStorageCapacity:20,healthMax:8e3,healthRegenPerSecond:1,speedIncrease:0,movable:!1,isRelay:!0,distanceFactor:1,isEnergyRoot:!0,ammoCost:0,ammoMax:0,attackCooldown:0,attackRadius:0,damage:0,damagePattern:[],fluidPerSecond:0,fluidEmitEveryNthFrame:0,fluidDelay:0},Collector:{unitName:"Collector",size:"3x3",spriteKeys:["Collector"],uiTextureKey:"Collector",buildCost:5,connectionRadius:9,collectionRadius:5,energyProduction:0,energyStorageCapacity:0,healthMax:1,healthRegenPerSecond:0,speedIncrease:0,movable:!1,isRelay:!0,distanceFactor:1,isEnergyRoot:!1,ammoCost:0,ammoMax:0,attackCooldown:0,attackRadius:0,damage:0,damagePattern:[],fluidPerSecond:0,fluidEmitEveryNthFrame:0,fluidDelay:0},Relay:{unitName:"Relay",size:"3x3",spriteKeys:["Relay"],uiTextureKey:"Relay",buildCost:20,connectionRadius:19,collectionRadius:0,energyProduction:0,energyStorageCapacity:0,healthMax:1,healthRegenPerSecond:0,speedIncrease:0,movable:!1,isRelay:!0,distanceFactor:.5,isEnergyRoot:!1,ammoCost:0,ammoMax:0,attackCooldown:0,attackRadius:0,damage:0,damagePattern:[],fluidPerSecond:0,fluidEmitEveryNthFrame:0,fluidDelay:0},Blaster:{unitName:"Blaster",size:"3x3",spriteKeys:["Blaster","Blaster_top"],uiTextureKey:"Blaster_ui",buildCost:25,connectionRadius:9,collectionRadius:0,energyProduction:0,energyStorageCapacity:0,healthMax:150,healthRegenPerSecond:1,speedIncrease:0,movable:!0,isRelay:!1,distanceFactor:1,isEnergyRoot:!1,ammoCost:.2,ammoMax:10,attackCooldown:4,attackRadius:6,damage:32e3,damagePattern:[[0,0],[1,0],[-1,0],[0,1],[0,-1],[1,1],[-1,-1],[1,-1],[-1,1]],fluidPerSecond:0,fluidEmitEveryNthFrame:0,fluidDelay:0},Mortar:{unitName:"Mortar",size:"3x3",spriteKeys:["Mortar","Mortar_shell"],uiTextureKey:"Mortar",buildCost:50,connectionRadius:9,collectionRadius:0,energyProduction:0,energyStorageCapacity:0,healthMax:200,healthRegenPerSecond:1,speedIncrease:0,movable:!0,isRelay:!1,distanceFactor:1,isEnergyRoot:!1,ammoCost:10/3-.01,ammoMax:20,attackCooldown:50,attackRadius:9,damage:256e3,damagePattern:[[0,0],[1,0],[-1,0],[0,1],[0,-1],[1,1],[-1,-1],[1,-1],[-1,1],[-2,0],[2,0],[0,2],[0,-2]],fluidPerSecond:0,fluidEmitEveryNthFrame:0,fluidDelay:0},Storage:{unitName:"Storage",size:"3x3",spriteKeys:["Storage"],uiTextureKey:"Storage",buildCost:20,connectionRadius:9,collectionRadius:0,energyProduction:0,energyStorageCapacity:20,healthMax:1,healthRegenPerSecond:0,speedIncrease:0,movable:!1,isRelay:!1,distanceFactor:1,isEnergyRoot:!1,ammoCost:0,ammoMax:0,attackCooldown:0,attackRadius:0,damage:0,damagePattern:[],fluidPerSecond:0,fluidEmitEveryNthFrame:0,fluidDelay:0},Speed:{unitName:"Speed",size:"3x3",spriteKeys:["Speed"],uiTextureKey:"Speed",buildCost:35,connectionRadius:9,collectionRadius:0,energyProduction:0,energyStorageCapacity:0,healthMax:1,healthRegenPerSecond:0,speedIncrease:8,movable:!1,isRelay:!1,distanceFactor:1,isEnergyRoot:!1,ammoCost:0,ammoMax:0,attackCooldown:0,attackRadius:0,damage:0,damagePattern:[],fluidPerSecond:0,fluidEmitEveryNthFrame:0,fluidDelay:0},Reactor:{unitName:"Reactor",size:"3x3",spriteKeys:["Reactor"],uiTextureKey:"Reactor",buildCost:40,connectionRadius:9,collectionRadius:0,energyProduction:.4,energyStorageCapacity:0,healthMax:1,healthRegenPerSecond:0,speedIncrease:0,movable:!1,isRelay:!1,distanceFactor:1,isEnergyRoot:!1,ammoCost:0,ammoMax:0,attackCooldown:0,attackRadius:0,damage:0,damagePattern:[],fluidPerSecond:0,fluidEmitEveryNthFrame:0,fluidDelay:0},EmitterWeak:{unitName:"Emitter",size:"3x3",spriteKeys:["Emitter"],uiTextureKey:"Emitter",buildCost:0,connectionRadius:0,collectionRadius:0,energyProduction:0,energyStorageCapacity:0,healthMax:0,healthRegenPerSecond:0,speedIncrease:0,movable:!1,isRelay:!1,distanceFactor:1,isEnergyRoot:!1,ammoCost:0,ammoMax:0,attackCooldown:0,attackRadius:0,damage:0,damagePattern:[],fluidPerSecond:163837.5,fluidEmitEveryNthFrame:1,fluidDelay:0},EmitterRegular:{unitName:"Emitter",size:"3x3",spriteKeys:["Emitter"],uiTextureKey:"Emitter",buildCost:0,connectionRadius:0,collectionRadius:0,energyProduction:0,energyStorageCapacity:0,healthMax:0,healthRegenPerSecond:0,speedIncrease:0,movable:!1,isRelay:!1,distanceFactor:1,isEnergyRoot:!1,ammoCost:0,ammoMax:0,attackCooldown:0,attackRadius:0,damage:0,damagePattern:[],fluidPerSecond:327675,fluidEmitEveryNthFrame:1,fluidDelay:0}},f={seed:.123,sizeX:100,sizeY:100,noise:[{scale:200,offsetX:0,offsetY:0,strength:2.5},{scale:96,offsetX:0,offsetY:0,strength:2},{scale:32,offsetX:0,offsetY:0,strength:1},{scale:32,offsetX:-150,offsetY:-150,strength:2,subtract:!0}],rects:[{xCoord:75,yCoord:25,w:4,h:4,elevation:3e3},{xCoord:75,yCoord:25,w:2,h:2,elevation:0},{xCoord:9,yCoord:12,w:5,h:2,elevation:6e3},{xCoord:32,yCoord:42,w:3,h:3,elevation:6e3},{xCoord:24,yCoord:52,w:3,h:3,elevation:9e3},{xCoord:19,yCoord:45,w:7,h:3,elevation:0},{xCoord:25,yCoord:46,w:7,h:3,elevation:0},{xCoord:30,yCoord:47,w:5,h:5,elevation:0},{xCoord:9,yCoord:3,w:1,h:5,elevation:0},{xCoord:8,yCoord:7,w:1,h:5,elevation:0},{xCoord:7,yCoord:10,w:1,h:5,elevation:0},{xCoord:6,yCoord:14,w:1,h:5,elevation:0},{xCoord:42,yCoord:24,w:2,h:3,elevation:3e3},{xCoord:40,yCoord:26,w:2,h:3,elevation:3e3},{xCoord:38,yCoord:27,w:9,h:10,elevation:3e3}],entities:[{id:"city",xCoord:50,yCoord:26,active:!0,built:!0,props:g.City},{id:"emitter1",xCoord:19,yCoord:36,active:!0,built:!1,props:g.EmitterWeak},{id:"emitter2",xCoord:10,yCoord:75,active:!0,built:!1,props:g.EmitterWeak},{id:"emitter3",xCoord:85,yCoord:68,active:!0,built:!1,props:g.EmitterWeak},{id:"emitter4",xCoord:95,yCoord:5,active:!0,built:!1,props:g.EmitterWeak},{id:"collector2",xCoord:44,yCoord:20,active:!0,built:!1,props:g.Collector},{id:"relay1",xCoord:75,yCoord:27,active:!0,built:!0,props:g.Relay},{id:"Mortar1",xCoord:38,yCoord:32,active:!0,built:!0,props:g.Mortar}]};function C(){return new Worker(i.p+"pathFinder.worker.7580196697597596d9a3.bundle.worker.js")}var x=i(254);function S(e,t,i,s,r,o){let a=Math.PI/2*3,n=t,l=i;const h=Math.PI/s;e.beginPath(),e.moveTo(t,i-r);for(let c=0;c<s;c++)n=t+Math.cos(a)*r,l=i+Math.sin(a)*r,e.lineTo(n,l),a+=h,n=t+Math.cos(a)*o,l=i+Math.sin(a)*o,e.lineTo(n,l),a+=h;e.lineTo(t,i-r),e.closePath(),e.fillPath(),e.strokePath()}function w(){return Math.random().toString(36).substring(2,10)}function R(e,t,i,s){const r=v(e,t,i,s,!1);return r.sort(((e,t)=>e[1]-t[1])),r.map((e=>e[0].cellIndex))}function v(e,t,i,s,r=!0){const o=Math.max(i-s,0),a=Math.max(t-s,0),n=Math.min(i+s,f.sizeY),l=Math.min(t+s,f.sizeX),h=[];for(let c=o;c<=n;c++)for(let o=a;o<=l;o++){const a=e.cells[T(o,c)];if(r&&!a.ref)continue;const n=Math.sqrt((t-o)**2+(i-c)**2);n>s||h.push([a,n])}return h}function I(e,t){const i=t.cells[e];return(t.terrainData[i.edgeIndexTL]+t.terrainData[i.edgeIndexTR]+t.terrainData[i.edgeIndexBL]+t.terrainData[i.edgeIndexBR])/4}function b(e,t){const i=t.cells[e];return(t.fluidData[i.edgeIndexTL]+t.fluidData[i.edgeIndexTR]+t.fluidData[i.edgeIndexBL]+t.fluidData[i.edgeIndexBR])/4}function E(e,t,i){const s=T(e,t);if(e<0||t<0||e>=f.sizeX||t>=f.sizeY)return!1;if(I(s,i)%3e3!=0)return!1;const r=i.cells[s];return!(null!==r.ref||null!==r.cellIndexTop&&i.cells[r.cellIndexTop].ref||null!==r.cellIndexLeft&&i.cells[r.cellIndexLeft].ref||null!==r.cellIndexRight&&i.cells[r.cellIndexRight].ref||null!==r.cellIndexBottom&&i.cells[r.cellIndexBottom].ref||null!==r.cellIndexTopLeft&&i.cells[r.cellIndexTopLeft].ref||null!==r.cellIndexTopRight&&i.cells[r.cellIndexTopRight].ref||null!==r.cellIndexBottomLeft&&i.cells[r.cellIndexBottomLeft].ref||null!==r.cellIndexBottomRight&&i.cells[r.cellIndexBottomRight].ref)}function T(e,t){return t*(f.sizeX+1)+e}const P=new Set;function M(e,t){const i=`line-${Math.round(t)}`;if(!P.has(i)){const s=e.add.graphics();s.fillStyle(0,1),s.fillRect(0,0,t,6),s.fillStyle(16777215,1),s.fillRect(0,2,t,2),s.generateTexture(i,t,6),s.destroy(),P.add(i)}return i}class D{constructor(e,t){this.simulation=e,this.built=!1,this.energyPath={found:!1,distance:1/0,path:[],ids:new Set},this.findPathAsyncInProgress=!1,this.sprites=[],this.mortarShells=[],this.isMoving=!1,this.isDestroyed=!1,this.healthCurrent=0,this.ammoCurrent=0,this.cellIndicesInAttackRange=[],this.pendingBuild=[],this.pendingHealth=[],this.pendingAmmo=[],this.textureKeysBlast=new Set,this.energyRequestCooldown=10,this.id=t.id||w(),this.xCoord=t.xCoord,this.yCoord=t.yCoord,this.x=t.xCoord*h+8,this.y=t.yCoord*h+8,this.active=t.active,this.props=t.props,this.cellIndex=T(this.xCoord,this.yCoord);const i=I(this.cellIndex,e.state);if(i%3e3!=0)throw new Error("Structure must be placed on a cell where all 4 edges are on the same elevation layer");if(D.particlePlaceEntity.explode(20,this.x,this.y),this.remainingBuildCost=this.props.buildCost,this.sprites=t.props.spriteKeys?.map((e=>D.scene.add.sprite(this.x,this.y,e).setData("id",this.id).setDepth(c.UNIT).setAlpha(.3).setInteractive()))||[],this.props.healthMax>=1&&(this.healthBar=D.scene.add.graphics().setDepth(c.AMMO_CIRCLE)),"Blaster"===t.props.unitName){const t=R(this.simulation.state,this.xCoord,this.yCoord,this.props.attackRadius);this.cellIndicesInAttackRange=t.filter((t=>e.state.terrainData[t]<=i)),this.ammoCircle=D.scene.add.graphics().setDepth(c.AMMO_CIRCLE),this.blastSprite=D.scene.add.sprite(this.x,this.y,this.getBlastSpriteTexture(this.props.attackRadius*h)).setDepth(c.MORTAR_SHELL).setVisible(!1).setOrigin(0,.25),this.renderAmmo()}else"Mortar"===t.props.unitName&&(this.cellIndicesInAttackRange=R(this.simulation.state,this.xCoord,this.yCoord,this.props.attackRadius),this.ammoCircle=D.scene.add.graphics().setDepth(c.AMMO_CIRCLE),this.mortarShells.push(D.scene.add.sprite(this.x,this.y,"Mortar_shell").setDepth(c.MORTAR_SHELL).setScale(1).setVisible(!1)),this.mortarShells.push(D.scene.add.sprite(this.x,this.y,"Mortar_shell").setDepth(c.MORTAR_SHELL).setScale(1).setVisible(!1)),this.mortarShells.push(D.scene.add.sprite(this.x,this.y,"Mortar_shell").setDepth(c.MORTAR_SHELL).setScale(1).setVisible(!1)),this.sprites[1].setVisible(!1));if((0===t.props.buildCost||t.built)&&this.build(t.props.buildCost+1),this.simulation.state.entities.set(this.id,this),this.simulation.state.cells[this.cellIndex].ref)throw new Error("Cell is already occupied");this.simulation.state.cells[this.cellIndex].ref=this,this.props.isEnergyRoot&&(this.simulation.state.root=this),this.props.connectionRadius&&this.simulation.connectToEnergyNetwork(this)}step(){this.isMoving||"City"===this.props.unitName||("Collector"===this.props.unitName||"Relay"===this.props.unitName?(this.checkSelfDamage(),this.checkEnergyNeeds()):"Blaster"===this.props.unitName?(this.checkSelfDamage(),this.checkEnergyNeeds(),this.selfHeal(),this.blasterAttack()):"Mortar"===this.props.unitName?(this.checkSelfDamage(),this.checkEnergyNeeds(),this.selfHeal(),this.mortarAttack()):"Storage"===this.props.unitName||"Speed"===this.props.unitName||"Reactor"===this.props.unitName?(this.checkSelfDamage(),this.checkEnergyNeeds()):"Emitter"===this.props.unitName&&this.emit())}checkEnergyNeeds(){if(this.isDestroyed||!this.active)return;if(!this.energyPath.found&&"City"!==this.props.unitName)return void(this.findPathAsyncInProgress||this.findPathAsync());const e=this.simulation.state.tickCounter;e-this.lastEnergyRequest<=this.energyRequestCooldown||(this.built?this.ammoCurrent<this.props.ammoMax&&this.pendingAmmo.length<this.props.ammoMax-this.ammoCurrent&&(this.lastEnergyRequest=e,this.pendingAmmo.push(this.simulation.requestEnergy("ammo",1,this))):0!==this.remainingBuildCost&&this.pendingBuild.length<this.remainingBuildCost?(this.lastEnergyRequest=e,this.pendingBuild.push(this.simulation.requestEnergy("build",1,this))):0===this.remainingBuildCost&&this.build(1))}selfHeal(){this.props.healthRegenPerSecond&&this.healthCurrent<this.props.healthMax&&(this.healthCurrent=Math.min(this.healthCurrent+this.props.healthRegenPerSecond,this.props.healthMax))}emit(){if(!this.active)return;const e=this.simulation.state.tickCounter;if(this.props.fluidDelay>e)return;if(this.props.fluidEmitEveryNthFrame>1&&e%this.props.fluidEmitEveryNthFrame!=1)return;const t=u.elevationMax+p.overflow,i=.05*this.props.fluidPerSecond,s=Math.min(Math.max(i,0),t),r=this.simulation.state.cells[this.cellIndex];this.simulation.state.fluidData[r.edgeIndexTL]=s,this.simulation.state.fluidData[r.edgeIndexTR]=s,this.simulation.state.fluidData[r.edgeIndexBL]=s,this.simulation.state.fluidData[r.edgeIndexBR]=s}hit(e){this.healthCurrent=Math.max(this.healthCurrent-e,0),0===this.healthCurrent&&this.destroy()}receiveEnergy(e){if(!this.isDestroyed){if(!e)throw new Error("This structure does not have a pending energy request with that id");"build"===e.type?(this.build(e.amount),this.pendingBuild=this.pendingBuild.filter((t=>t.id!==e.id))):"ammo"===e.type&&(this.ammoCurrent=Math.min(this.ammoCurrent+e.amount,this.props.ammoMax),this.pendingAmmo=this.pendingAmmo.filter((t=>t.id!==e.id)),this.ammoCircle&&this.renderAmmo())}}findPathAsync(){if(this.isDestroyed)return;const e=this.simulation.state.tickCounter;e-this.lastPathFindAttempt<20||(this.findPathAsyncInProgress=!0,this.lastPathFindAttempt=e,this.simulation.findPathToEnergySourceAsync(this).then((e=>{this.energyPath=e,this.findPathAsyncInProgress=!1,e.found&&this.built&&"Collector"===this.props.unitName&&(this.simulation.state.collectorDataNeedsRefresh=!0,this.simulation.state.collectorIds.add(this.id))})))}build(e){this.built||this.isDestroyed||"City"!==this.props.unitName&&!this.energyPath.found||(this.remainingBuildCost=Math.max(this.remainingBuildCost-e,0),this.remainingBuildCost>0||(this.built=!0,this.healthCurrent=this.props.healthMax,this.sprites.forEach((e=>e.setAlpha(1))),"Collector"!==this.props.unitName&&"City"!==this.props.unitName||(this.simulation.state.collectorDataNeedsRefresh=!0,this.simulation.state.collectorIds.add(this.id)),this.props.energyProduction&&(this.simulation.state.energyProducing+=this.props.energyProduction),this.props.energyStorageCapacity&&(this.simulation.state.energyStorageMax+=this.props.energyStorageCapacity),this.props.speedIncrease&&(this.simulation.state.energyTravelSpeed+=this.props.speedIncrease),this.props.fluidPerSecond&&this.simulation.state.emitterIds.add(this.id),this.props.collectionRadius&&D.sfx_startCollect.play()))}destroy(){this.isDestroyed||(this.sprites.forEach((e=>e.destroy())),this.ammoCircle&&this.ammoCircle.destroy(),this.healthBar&&this.healthBar.destroy(),this.blastSprite&&this.blastSprite.destroy(),this.mortarShells.forEach((e=>e.destroy())),D.particleImpact.explode(20,this.x,this.y),this.isDestroyed=!0,this.healthCurrent=0,this.simulation.removeEntity(this.id),this.props.energyStorageCapacity&&(this.simulation.state.energyStorageMax-=this.props.energyStorageCapacity),this.props.energyProduction&&(this.simulation.state.energyProducing-=this.props.energyProduction),this.props.speedIncrease&&(this.simulation.state.energyTravelSpeed-=this.props.speedIncrease),this.props.collectionRadius&&(this.simulation.state.collectorDataNeedsRefresh=!0,this.simulation.state.collectorIds.delete(this.id)),this.props.fluidPerSecond&&this.simulation.state.emitterIds.delete(this.id))}renderAmmo(){if("Blaster"!==this.props.unitName&&"Mortar"!==this.props.unitName)return;if(this.isMoving)return;this.ammoCircle.clear(),this.ammoCircle.setDepth(c.AMMO_CIRCLE),this.ammoCircle.setVisible(!0),this.ammoCircle.setPosition(this.x,this.y),this.ammoCircle.setRotation(Phaser.Math.DegToRad(-45)),this.ammoCircle.lineStyle(1,0,1),this.ammoCircle.fillStyle(16711680,1);const e=this.ammoCurrent/this.props.ammoMax*360;if(this.ammoCircle.slice(0,0,15,Phaser.Math.DegToRad(-45),Phaser.Math.DegToRad(-45+e)),this.ammoCircle.fillPath(),"Mortar"===this.props.unitName){const e=this.ammoCurrent>=this.props.ammoCost;this.sprites[1].setVisible(e)}}renderHealth(){const e="3x3"===this.props.size?24:72;let t=0;if(this.healthBar.clear().setVisible(!0),this.healthBar.displayOriginY=.5,this.built){if(0===this.props.healthMax||this.healthCurrent===this.props.healthMax)return;t=this.healthCurrent/this.props.healthMax,this.healthBar.fillRect(this.x-8,this.y+h,e*t,2)}else{if(0===this.remainingBuildCost)return;t=1-this.remainingBuildCost/this.props.buildCost}this.healthBar.fillStyle(11184810,1),this.healthBar.fillRect(this.x-e/2,this.y+h,e,3),this.healthBar.fillStyle(65280,1),this.healthBar.fillRect(this.x-e/2,this.y+h,e*t,3)}getBlastSpriteTexture(e){const t=`blast-${Math.round(e)}`;if(!this.textureKeysBlast.has(t)){const i=5,s=D.scene.add.graphics();s.lineStyle(i,16711680,1),s.lineBetween(24,0,e,0),s.generateTexture(t,e,i),s.destroy(),this.textureKeysBlast.add(t)}return t}moveTo(e,t){const i=e*h+8,s=t*h+8,r=T(e,t);if(this.simulation.state.cells[r].ref===this)return;if(!this.props.movable||this.isDestroyed)throw new Error("This structure is not movable or already destroyed");this.isMoving=!0,this.simulation.state.cells[this.cellIndex].ref=null,this.energyPath=D.NOT_FOUND,this.simulation.state.root&&this.simulation.state.graph.removeEdgeBetween(this.id,this.simulation.state.root.id),this.simulation.state.graph.getNeighbourVertices(this.id).then((e=>{e.forEach((e=>{const t=this.simulation.state.entities.get(e);if(!t)throw new Error("Neighbour entity not found");this.simulation.renderingAdapter.destroyConnectionBetween(this,t)}))})),this.simulation.state.graph.removeVertex(this.id),this.sprites.forEach((e=>e.setScale(1)));const o=Math.sqrt((i-this.x)**2+(s-this.y)**2)/100*1e3;this.moveToTween&&this.moveToTween.stop().destroy(),this.moveToTween=D.scene.tweens.add({targets:this.sprites,x:{value:i,duration:o,ease:"Linear"},y:{value:s,duration:o,ease:"Linear"},scaleX:{value:1.3,duration:o/2,yoyo:!0,repeat:0},scaleY:{value:1.3,duration:o/2,yoyo:!0,repeat:0},onStart:()=>{this.ammoCircle.setVisible(!1),this.healthBar.setVisible(!1),this.pendingBuild=[],this.pendingAmmo=[],this.sprites.forEach((e=>e.setDepth(c.UNIT_MOVING)))},onComplete:()=>{this.isMoving=!1,this.cellIndex=r,this.xCoord=e,this.yCoord=t,this.x=i,this.y=s,this.renderAmmo(),this.renderHealth(),this.simulation.state.cells[r].ref=this,this.simulation.state.graph.removeVertex(this.id),this.sprites.forEach((e=>e.setDepth(c.UNIT))),this.resetPath(),this.props.connectionRadius&&this.simulation.connectToEnergyNetwork(this),this.moveToTween?.destroy();const o=I(this.cellIndex,this.simulation.state);if(o%3e3!=0)throw new Error("Structure must be placed on a cell where all 4 edges are on the same elevation layer");if("Mortar"===this.props.unitName)this.cellIndicesInAttackRange=R(this.simulation.state,this.xCoord,this.yCoord,this.props.attackRadius);else if("Blaster"===this.props.unitName){const e=R(this.simulation.state,this.xCoord,this.yCoord,this.props.attackRadius);this.cellIndicesInAttackRange=e.filter((e=>this.simulation.state.terrainData[e]<=o))}}})}resetPath(){this.energyPath=D.NOT_FOUND,this.pendingBuild=[],this.pendingAmmo=[];for(const e of this.simulation.state.entities.values())e.energyPath.ids.has(this.id)&&e.resetPath()}blasterAttack(){if(!(this.ammoCurrent<this.props.ammoCost||this.simulation.state.tickCounter-this.lastAttack<=this.props.attackCooldown))for(const e of this.cellIndicesInAttackRange){const t=this.simulation.state.cells[e];if(b(e,this.simulation.state)>=d){this.ammoCurrent-=this.props.ammoCost,this.lastAttack=this.simulation.state.tickCounter,this.renderAmmo();const e=t.xCoord-this.xCoord,i=t.yCoord-this.yCoord,s=Math.atan2(i,e),r=Phaser.Math.RadToDeg(s);this.sprites[1].setAngle(r+90),this.simulation.fluidChangeRequest(t.xCoord,t.yCoord,-this.props.damage,this.props.damagePattern),this.blastSprite.setTexture(this.getBlastSpriteTexture(Math.sqrt((t.x-this.x)**2+(t.y-this.y)**2))),setTimeout((()=>this.blastSprite.setVisible(!1).setActive(!1)),75),this.blastSprite.setAngle(r).setVisible(!0).setActive(!0).setPosition(this.x,this.y),D.particleImpact.explode(20,t.x,t.y),D.sfx_blasterHit.play();break}}}mortarAttack(){if(this.ammoCurrent<this.props.ammoCost)return;if(this.simulation.state.tickCounter-this.lastAttack<=this.props.attackCooldown)return;let e=null,t=0;for(const i of this.cellIndicesInAttackRange){const s=this.simulation.state.cells[i],r=b(i,this.simulation.state);r<d||(null===e||r>t)&&(e=s,t=r)}if(null===e)return;this.ammoCurrent-=this.props.ammoCost,this.lastAttack=this.simulation.state.tickCounter,this.renderAmmo();const i=Math.sqrt((e.x-this.x)**2+(e.y-this.y)**2)/(this.props.attackRadius*h)*1500;D.sfx_mortarShellStart.play();const s=D.scene.tweens.add({targets:this.mortarShells[0],x:{value:e.x,duration:i,ease:"Linear"},y:{value:e.y,duration:i,ease:"Linear"},scaleX:{value:1.5,duration:i/2,yoyo:!0,repeat:0,ease:"Bounce.inOut"},scaleY:{value:1.5,duration:i/2,yoyo:!0,repeat:0,ease:"Bounce.inOut"},angle:{value:1080,duration:i,ease:"Linear"},onStart:()=>{const e=this.mortarShells.shift();if(e?.setPosition(this.x,this.y),e?.setVisible(!0),!e)throw new Error("No more mortar shells");this.mortarShells.push(e)},onComplete:()=>{if(s.targets[0].setVisible(!1),!e)throw new Error("cell is null");this.simulation.fluidChangeRequest(e.xCoord,e.yCoord,-this.props.damage,this.props.damagePattern),D.particleImpact.explode(30,e.x,e.y),D.sfx_mortarShellHit.play(),s.destroy()}})}checkSelfDamage(){if(this.isDestroyed||this.props.fluidPerSecond)return;if(this.isMoving)return;const e=this.simulation.state.fluidData,{edgeIndexTL:t,edgeIndexTR:i,edgeIndexBL:s,edgeIndexBR:r}=this.simulation.state.cells[this.cellIndex];(e[t]>d||e[i]>d||e[r]>d||e[s]>d)&&this.hit(3),this.renderHealth()}static initStatic(e){D.scene=e,D.sfx_place_structure||(D.sfx_place_structure=e.sound.add("place_structure",{detune:200,rate:1.25,volume:1,loop:!1})),D.sfx_startCollect||(D.sfx_startCollect=e.sound.add("start_collect",{detune:600,rate:1.25,volume:.35,loop:!1})),D.sfx_blasterHit||(D.sfx_blasterHit=e.sound.add("attack_turret",{detune:0,rate:1.25,volume:.35,loop:!1})),D.sfx_mortarShellHit||(D.sfx_mortarShellHit=e.sound.add("attack_turret",{detune:-1e3,rate:.5,volume:1.5,loop:!1})),D.sfx_mortarShellStart||(D.sfx_mortarShellStart=e.sound.add("attack_turret",{detune:-600,rate:1.75,volume:.7,loop:!1})),D.particleImpact||(D.particleImpact=e.add.particles(0,0,"energy_red",{frequency:-1,lifespan:200,speed:{min:200,max:300},scale:{start:.4,end:.2},quantity:1,blendMode:"ADD"}).setDepth(c.PARTICLE_IMPACT)),D.particlePlaceEntity||(D.particlePlaceEntity=e.add.particles(0,0,"energy",{frequency:-1,lifespan:150,speed:{min:200,max:300},scale:{start:.4,end:.3},quantity:1,blendMode:"ADD"}).setDepth(c.PARTICLE_IMPACT)),D.selectedOutline||(D.selectedOutline=e.add.graphics().setDepth(c.UNIT_SELECTION_OUTLINE),D.selectedOutline.lineStyle(2,65280,1),D.selectedOutline.strokeRect(0,0,h,h))}}D.NOT_FOUND={distance:1/0,path:[],ids:new Set,found:!1};var k=i(768);const N=(f.sizeX+1)*(f.sizeY+1)*Uint16Array.BYTES_PER_ELEMENT;class _{constructor(e,t){this.observer=e,this.renderingAdapter=t,this.state={cells:[],root:null,graph:(0,k.Ud)(new C),prevFluidData:new Uint16Array(new ArrayBuffer(N)),fluidData:new Uint16Array(new ArrayBuffer(N)),terrainData:new Uint16Array(new ArrayBuffer(N)),collectionData:new Uint8Array(new ArrayBuffer(N)),energyTravelSpeed:150,energyStorageMax:0,energyStorageCurrent:0,energyProducing:0,energyCollecting:0,energyDeficit:0,energyProducedPerSecond:0,energyConsumedPerSecond:0,energyRequests:[],fluidChangeRequests:[],entities:new Map,emitterIds:new Set,collectorIds:new Set,selectedEntityId:null,collectorDataNeedsRefresh:!1,isPaused:!1,tickCounter:0},this.flowNeighbours=[[1,0],[-1,0],[0,1],[0,-1]],this.flowNeighboursAlt=[[-1,-1],[-1,1],[1,1],[1,-1]],this.cellEdges=[[0,0],[1,0],[1,1],[0,1]],this.generateWorldCells(),this.generateTerrainData();for(const e of f.entities)new D(this,e)}step(){if(!this.state.isPaused){this.state.tickCounter++,this.updateEnergy(),this.fluidFlow(),this.updateCollectorData();for(const e of this.state.entities.values())e.step()}}removeEntity(e){const t=this.state.entities.get(e);if(t){this.state.graph.getNeighbourVertices(e).then((e=>{for(const i of e){if(i===t.id)continue;const e=this.state.entities.get(i);if(!e)throw new Error("otherEntity not found");this.renderingAdapter.destroyConnectionBetween(t,e)}})),this.state.cells[t.cellIndex].ref=null,this.state.entities.delete(e),t.isDestroyed||t.destroy(),this.state.graph.removeVertex(e);for(const t of this.state.entities.values())t.energyPath.found&&t.energyPath.ids.has(e)&&(t.resetPath(),t.props.collectionRadius&&(this.state.collectorDataNeedsRefresh=!0,this.state.collectorIds.delete(t.id)))}}requestEnergy(e,t,i){if(i.isDestroyed)throw new Error("This structure is already destroyed");if(i.props.isEnergyRoot)throw new Error("Energy roots cannot request energy");if(!i.energyPath.found)throw new Error("This structure is not connected to an energy source. ID: "+i.id);const s={id:w(),type:e,amount:t,requester:i};return this.state.energyRequests.push(s),s}connectToEnergyNetwork(e){this.state.graph.createVertex(e.id,e.x,e.y,{x:e.x,y:e.y});for(const[t,i]of v(this.state,e.xCoord,e.yCoord,e.props.connectionRadius,!0)){if(!t.ref)continue;if(!t.ref.props.isRelay&&!e.props.isRelay)continue;if(t.ref.id===e.id)continue;const s=i*h;i>t.ref.props.connectionRadius||0===Math.floor(i)||(this.state.graph.createEdge(e.id,t.ref.id,s,null),this.renderingAdapter.renderConnectionBetween(e,t.ref,s))}}fluidChangeRequest(e,t,i,s=[[0,0]]){const r=i/(4*s.length);for(const[i,o]of s)for(const[s,a]of this.cellEdges)this.state.fluidChangeRequests.push({xCoord:e+i+s,yCoord:t+o+a,amount:r})}updateEnergy(){const e=this.state.energyProducing+this.state.energyCollecting,t=Math.min(this.state.energyStorageCurrent+.05*e,this.state.energyStorageMax),i=this.state.energyRequests.reduce(((e,t)=>e+t.amount),0);for(this.state.energyProducedPerSecond=e,this.state.energyStorageCurrent=t,this.state.energyDeficit=i;this.state.energyStorageCurrent>=1&&this.state.energyRequests.length;){const e=this.state.energyRequests.shift();this.state.energyStorageCurrent-=e.amount,this.state.energyConsumedPerSecond+=e.amount,this.renderingAdapter.renderEnergyBall(this.state,e)}this.observer.emit(r,this.state.energyStorageCurrent,this.state.energyStorageMax),this.state.tickCounter%20==0&&(this.observer.emit(o,this.state.energyProducedPerSecond),this.observer.emit(a,this.state.energyConsumedPerSecond),this.state.energyConsumedPerSecond=0)}fluidFlow(){const{flowRate:e,overflow:t}=p,{elevationMax:i}=u,{prevFluidData:s,fluidData:r}=this.state;for(const{xCoord:e,yCoord:s,amount:o}of this.state.fluidChangeRequests){const a=T(e,s);r[a]=Math.min(Math.max(r[a]+o,0),i+t)}this.state.fluidChangeRequests.length=0,s.set(r);const o=s.reduce(((e,t)=>e+t),0),a=this.state.tickCounter%2==0?this.flowNeighbours:this.flowNeighboursAlt,n=Array.from({length:a.length},(()=>[0,0]));let l=0;for(let t=0;t<=f.sizeY;t++)for(let i=0;i<=f.sizeX;i++){const o=T(i,t),h=s[o],c=h+this.state.terrainData[o];if(h<500&&(s[o]=0),h<900)continue;l=0;for(const[e,r]of a){const o=i+e,a=t+r,h=n[l++];if(!(o>=0&&o<=f.sizeX&&a>=0&&a<=f.sizeY)){h[0]=-1,h[1]=-1;continue}const d=T(o,a),u=c-(s[d]+this.state.terrainData[d]);h[0]=u,h[1]=d}n.sort(((e,t)=>t[0]-e[0]));const d=e/a.length;for(const[e,t]of n){if(e<2||-1===t)continue;const i=e*d,s=r[o]*d,a=Math.floor(Math.min(Math.max(i,0),s));if(a<1)break;r[o]-=a,r[t]+=a}}const h=r.reduce(((e,t)=>e+t),0);console.assert(o===h,"loss of density due to adding or subtracting fractions to uint16array"),this.renderingAdapter.renderFluid(this.state)}updateCollectorData(){if(!this.state.collectorDataNeedsRefresh)return;this.state.collectionData.fill(0);let e=0;for(const t of this.state.collectorIds){const i=this.state.entities.get(t);if(!i)throw new Error("Collector not found. State corrupted");const{xCoord:s,yCoord:r,props:{collectionRadius:o}}=i,a=this.state.terrainData[T(s,r)];for(let t=-o;t<=o;t++)for(let i=-o;i<=o;i++){const n=s+i,l=r+t;if(!(Math.sqrt((s-n)**2+(r-l)**2)>=o))for(const[t,i]of this.cellEdges){const s=n+t,r=l+i;if(!(s>=0&&s<=f.sizeX&&r>=0&&r<=f.sizeY))continue;const o=T(s,r);1!==this.state.collectionData[o]&&(this.state.terrainData[o]===a&&(e++,this.state.collectionData[o]=1))}}}this.state.energyCollecting=.0025*e,this.state.collectorDataNeedsRefresh=!1,this.renderingAdapter.renderCollectionArea(this.state)}generateWorldCells(){for(let e=0;e<=f.sizeY;e++)for(let t=0;t<=f.sizeX;t++){const i=T(t,e),s=T(t,e),r=s+f.sizeX+1,o=s+1,a=r+1,n=0===e,l=0===t,c=t===f.sizeX,d=e===f.sizeY;this.state.cells.push({cellIndex:i,edgeIndexTL:s,edgeIndexTR:o,edgeIndexBL:r,edgeIndexBR:a,xCoord:t,yCoord:e,x:t*h,y:e*h,cellIndexTop:n?null:i-f.sizeX-1,cellIndexRight:l?null:i-1,cellIndexLeft:d?null:i+f.sizeX+1,cellIndexBottom:c?null:i+1,cellIndexTopLeft:n||l?null:i-f.sizeX-2,cellIndexTopRight:n||c?null:i-f.sizeX,cellIndexBottomLeft:d||l?null:i+f.sizeX,cellIndexBottomRight:d||c?null:i+f.sizeX+2,ref:null})}}generateTerrainData(){const{elevationMax:e}=u,t=f.noise.filter((e=>!e.subtract)).length,i=(0,x.hA)((()=>f.seed));for(let s=0;s<=f.sizeY;s++)for(let r=0;r<=f.sizeX;r++){let o=0,a=0;for(const{scale:t,strength:n,subtract:l,offsetX:h,offsetY:c}of f.noise){const d=Math.max(i((r-h)/t,(s-c)/t)*e*n,0);l?a+=d:o+=d}o-=a,o=Math.min(Math.max(o/t,0),e),o<2500&&(o=0),o=3e3*Math.floor(o/3e3);const n=T(r,s);if(o%3e3!=0)throw new Error("Terrain elevation must be divisible by 3");this.state.terrainData[n]=o}for(const e of f.rects)for(let t=e.yCoord;t<e.yCoord+e.h;t++)for(let i=e.xCoord;i<e.xCoord+e.w;i++){const s=T(i,t);this.state.terrainData[s]=e.elevation}this.renderingAdapter.renderTerrain(this.state)}async findPathToEnergySourceAsync(e){if(!this.state.root)throw new Error("root is null");const t=this.state.root.id,i=e.id,s=await this.state.graph.findPath(t,i,"euclidian");let r=!1;for(const t of s.path){if(t.id===e.id)continue;const i=this.state.entities.get(t.id);if(!i||!i.built){r=!0;break}}return r?{path:[],distance:1/0,ids:new Set,found:!1}:s}}class A{constructor(e=4,t=2,i=0,s=16777215){this.shapeByIndex=[],this.computeShapeTable(e,t,i,s)}computeShapeTable(e,t,i,s,r=0){const o=[],a={x:0,y:0},n={x:h,y:0},l={x:0,y:h},c={x:h,y:h},d={x:0,y:8},u={x:h,y:8},p={x:8,y:0},m={x:8,y:h},y=r/Math.sqrt(2),g=(e,t)=>({x:e.x+t,y:e.y}),f=(e,t)=>({x:e.x,y:e.y+t}),C=f(d,r),x=f(d,-r),S=f(d,y),w=f(d,-y),R=f(u,r),v=f(u,-r),I=f(u,y),b=f(u,-y),E=g(p,r),T=g(p,-r),P=g(p,y),M=g(p,-y),D=g(m,r),k=g(m,-r),N=g(m,y),_=g(m,-y);for(let r=0;r<16;r++){const h=[],d=[];switch(r){case 0:break;case 1:h.push([S,_,l]),t&&d.push({p1:S,p2:_,lw:t,c:s});break;case 2:h.push([I,c,N]),t&&d.push({p1:N,p2:I,lw:t,c:s});break;case 3:h.push([C,R,c,l]),t&&d.push({p1:C,p2:R,lw:t,c:s});break;case 4:h.push([P,n,b]),e&&d.push({p1:b,p2:P,lw:e,c:i});break;case 5:h.push([P,n,b,_,l,S]),t&&d.push({p1:S,p2:P,lw:t,c:s}),e&&d.push({p1:_,p2:b,lw:e,c:i});break;case 6:h.push([E,n,c,D]),e&&d.push({p1:D,p2:E,lw:e,c:i});break;case 7:h.push([P,n,c,l,S]),t&&d.push({p1:P,p2:S,lw:t,c:s});break;case 8:h.push([a,M,w]),e&&d.push({p1:M,p2:w,lw:e,c:i});break;case 9:h.push([a,T,k,l]),e&&d.push({p1:T,p2:k,lw:e,c:i});break;case 10:h.push([a,M,I,c,N,w]),t&&d.push({p1:M,p2:I,lw:t,c:s}),e&&d.push({p1:N,p2:w,lw:e,c:i});break;case 11:h.push([a,M,I,c,l]),t&&d.push({p1:M,p2:I,lw:t,c:s});break;case 12:h.push([a,n,v,x]),e&&d.push({p1:v,p2:x,lw:e,c:i});break;case 13:h.push([a,n,b,_,l]),e&&d.push({p1:b,p2:_,lw:e,c:i});break;case 14:h.push([a,n,c,N,w]),e&&d.push({p1:N,p2:w,lw:e,c:i});break;case 15:h.push([a,n,c,l]);break;default:throw new Error("Invalid shape index")}o[r]={polygons:h,isoLines:d,index:r}}this.shapeByIndex=o}getShapeIndex(e,t,i,s,r){let o=0;return e>=r&&(o|=8),t>=r&&(o|=4),i>=r&&(o|=2),s>=r&&(o|=1),o}}class B{constructor(e){this.scene=e,this.fluidToTerrainAbove={},this.connections=new Map;const t=f.sizeX*h,i=f.sizeY*h;this.rtTerrain=this.scene.make.renderTexture({x:0,y:0,width:t,height:i},!0).setDepth(c.TERRAIN).setOrigin(0,0),this.rtCollection=this.scene.make.renderTexture({x:0,y:0,width:t,height:i},!0).setDepth(c.COLLECTION).setOrigin(0,0),this.rtFluid=this.scene.make.renderTexture({x:0,y:0,width:t,height:i},!0).setDepth(c.FLUID).setOrigin(0,0),this.marchingSquares=new A;const s=3e3;for(const e of y){const t=Math.floor(e.elevation/s)*s;this.fluidToTerrainAbove[e.elevation]=t+s}this.generateLayers()}renderTerrain(e){const t=this.scene.add.graphics();t.fillStyle(5523265,1),t.fillRect(0,0,f.sizeX*h,f.sizeY*h),this.rtTerrain.beginDraw(),this.rtTerrain.batchDraw(t,0,0,1);for(const{elevation:t}of m){const i="terrain_"+t,s=t+3e3;for(const{edgeIndexTL:r,edgeIndexTR:o,edgeIndexBL:a,edgeIndexBR:n,x:l,y:h}of e.cells){const c=e.terrainData[r],d=e.terrainData[o],u=e.terrainData[n],p=e.terrainData[a];if(15===this.marchingSquares.getShapeIndex(c,d,u,p,s))continue;const m=this.marchingSquares.getShapeIndex(c,d,u,p,t);this.rtTerrain.batchDrawFrame(i,m,l,h,1)}}this.rtTerrain.endDraw(),t.destroy()}renderCollectionArea(e){this.rtCollection.clear(),this.rtCollection.beginDraw();for(const{edgeIndexTL:t,edgeIndexTR:i,edgeIndexBL:s,edgeIndexBR:r,xCoord:o,yCoord:a}of e.cells){const n=this.marchingSquares.getShapeIndex(e.collectionData[t],e.collectionData[i],e.collectionData[r],e.collectionData[s],1);0!==n&&this.rtCollection.batchDrawFrame("collection_area",n,o*h,a*h)}this.rtCollection.endDraw()}renderFluid(e){this.rtFluid.clear(),this.rtFluid.setBlendMode(Phaser.BlendModes.NORMAL),this.rtFluid.beginDraw();const t=function(e){const{x:t,y:i,width:s,height:r}=e.cameras.main.worldView,o=f.sizeX*h,a=t<0?Math.abs(t):0,n=s+t>o?s+t-o:0,l=Phaser.Math.Clamp(Math.floor((s-a-n)/h),0,f.sizeX-1)+2;if(l<=0)return null;const c=f.sizeY*h,d=i<0?Math.abs(i):0,u=r+i>c?r+i-c:0,p=Phaser.Math.Clamp(Math.floor((r-d-u)/h),0,f.sizeY-1)+2;return p<=0?null:{coordX:Phaser.Math.Clamp(Math.floor(t/h)-1,0,f.sizeX-1),coordY:Phaser.Math.Clamp(Math.floor(i/h)-1,0,f.sizeY-1),numCoordsX:l,numCoordsY:p}}(this.scene);if(!t)return;const i=Math.max(t.coordX,0),s=Math.max(t.coordY,0),r=Math.min(t.coordY+t.numCoordsY,f.sizeY),o=Math.min(t.coordX+t.numCoordsX,f.sizeX),a=f.sizeX+1;for(let t=s;t<=r;t++)for(let s=i;s<=o;s++){const i=e.cells[t*a+s],r=e.terrainData[i.edgeIndexTL],o=e.terrainData[i.edgeIndexTR],n=e.terrainData[i.edgeIndexBR],l=e.terrainData[i.edgeIndexBL];let h=e.fluidData[i.edgeIndexTL],c=e.fluidData[i.edgeIndexTR],u=e.fluidData[i.edgeIndexBR],p=e.fluidData[i.edgeIndexBL];h>=d&&(h+=r),c>=d&&(c+=o),u>=d&&(u+=n),p>=d&&(p+=l);let m=-1;for(const{elevation:e}of y){const t=this.marchingSquares.getShapeIndex(h,c,u,p,e);if(0===t)break;const s=m===t;if(15===this.marchingSquares.getShapeIndex(r,o,n,l,this.fluidToTerrainAbove[e]))continue;const a=s?"fluid_"+e+"_noline":"fluid_"+e;this.rtFluid.batchDrawFrame(a,t,i.x,i.y),m=t}}this.rtFluid.endDraw()}renderEnergyBall(e,t){const i=t.requester.energyPath,s=i.path.reduce(((e,t)=>e.concat(t.x,t.y)),[]),r=this.scene.add.path(s[0],s[1]);for(let e=2;e<s.length;e+=2)r.lineTo(s[e],s[e+1]);const o="ammo"===t.type?"energy_red":"energy",a=i.distance/e.energyTravelSpeed*1e3,n={follower:this.scene.add.follower(r,s[0],s[1],o),id:w()};n.follower.setScale(1).setDepth(c.ENERGY),n.follower.startFollow({duration:a,repeat:0,onComplete:()=>{n.follower.destroy(),t.requester.receiveEnergy(t)}})}renderConnectionBetween(e,t,i){const s=Math.atan2(t.y-e.y,t.x-e.x),r=this.scene.add.sprite(e.x,e.y,M(this.scene,i)).setDepth(c.NETWORK).setOrigin(0,.5).setRotation(s),o="Relay"===e.props.unitName||"City"===e.props.unitName,a="Relay"===t.props.unitName||"City"===t.props.unitName;o&&a&&r.setTint(255);const n=e.id+t.id;r.setData("id",n),this.connections.set(n,r)}destroyConnectionBetween(e,t){const i=this.connections.get(e.id+t.id)||this.connections.get(t.id+e.id),s=i?.getData("id");if(!s)throw new Error("Connection sprite has no id");i&&i.destroy(),this.connections.delete(s)}generateLayers(){this.marchingSquares.computeShapeTable(4,2,0,16777215);for(const{elevation:e,color:t}of m){const i="terrain_"+e;this.generateTexture(i,t,4,4),this.generateTexture(i+"_noline",t,4,4,!1)}this.marchingSquares.computeShapeTable(1,1,0,16777215,2);for(const{elevation:e,color:t,alpha:i}of y){const s="fluid_"+e;this.generateTexture(s,t,i,4),this.generateTexture(s+"_noline",t,i,4,!1)}this.marchingSquares.computeShapeTable(0,0,0,0,2),this.generateTexture("collection_area",1740574,.3,4)}generateTexture(e,t,i=1,s=2,r=!0){const o=this.scene.add.graphics().fillStyle(t,i);for(let e=0;e<4;e++)for(let t=0;t<4;t++){const i=4*e+t,a=this.marchingSquares.shapeByIndex[i],n=t*(h+s),l=e*(h+s);if(o.translateCanvas(n,l),15===i)o.fillRect(0,0,h,h);else{for(const e of a.polygons)o.fillPoints(e,!0);if(r)for(const{p1:e,p2:t,c:i,lw:s}of a.isoLines)o.lineStyle(s,i).lineBetween(e.x,e.y,t.x,t.y)}o.translateCanvas(-n,-l)}const a=64+3*s;o.generateTexture(e,a,a),o.destroy();const n=this.scene.textures.get(e);for(let e=0;e<4;e++)for(let t=0;t<4;t++){const i=4*e+t,s=20*t,r=20*e;n.add(i,0,s,r,h,h)}}}class L{constructor(e,t){this.scene=e,this.state=t,this.textureKeysEdge=new Set,this.previewUnitProps=null,this.connectionSprite=e.add.sprite(0,0,"cell_white").setDepth(c.NETWORK).setOrigin(0,.5).setVisible(!1),this.unitSprite=e.add.sprite(0,0,"cell_white").setDepth(c.PREVIEW_UNIT).setOrigin(0,.5).setVisible(!1),this.rtConnections=e.add.renderTexture(0,0,f.sizeX*h,f.sizeY*h).setDepth(c.NETWORK).setOrigin(0,0).setAlpha(.5).setVisible(!1),this.rtRange=e.add.renderTexture(0,0,f.sizeX*h,f.sizeY*h).setDepth(c.COLLECTION_PREVIEW).setOrigin(0,0).setAlpha(.5).setVisible(!1)}previewEntity(e,t,i){null===e||null===t||e<0||t<0||e>=f.sizeX||t>=f.sizeY||i&&(this.unitSprite.setPosition(e*h-h,t*h+8),this.previewUnitProps&&this.previewUnitProps!==i&&this.previewCancel(),this.unitSprite.setTexture(i.uiTextureKey).setVisible(!0),this.rtRange.setVisible(!0),this.rtConnections.setVisible(!0),this.previewUnitProps=i,E(e,t,this.state)?(this.unitSprite.clearTint(),this.previewConnections(e,t,i),this.previewCollectionArea(e,t,i),this.previewBlasterAttackRange(e,t,i),this.previewMortarAttackRange(e,t,i)):(this.unitSprite.setTint(16711680),this.rtConnections.clear(),this.rtRange.clear(),this.connectionSprite.setVisible(!1)))}previewCollectionArea(e,t,i){if(0===i.collectionRadius)return;this.rtRange.clear();const s=I(T(e,t),this.state);this.rtRange.beginDraw();for(const[r]of v(this.state,e,t,i.collectionRadius,!1)){const e=I(r.cellIndex,this.state)===s;this.rtRange.batchDraw(e?"cell_white":"cell_red",r.x,r.y)}this.rtRange.endDraw()}previewBlasterAttackRange(e,t,i){if("Blaster"!==i.unitName)return;this.rtRange.clear();const s=I(T(e,t),this.state);this.rtRange.beginDraw();for(const[r]of v(this.state,e,t,i.attackRadius,!1)){const e=I(r.cellIndex,this.state)<=s;this.rtRange.batchDraw(e?"cell_white":"cell_red",r.x,r.y)}this.rtRange.endDraw()}previewMortarAttackRange(e,t,i){if("Mortar"===i.unitName){this.rtRange.clear(),this.rtRange.beginDraw();for(const[s]of v(this.state,e,t,i.attackRadius,!1))this.rtRange.batchDraw("cell_white",s.x,s.y);this.rtRange.endDraw()}}previewCancel(){this.rtConnections.clear().setVisible(!1),this.rtRange.clear().setVisible(!1),this.connectionSprite.setVisible(!1),this.unitSprite.setVisible(!1),this.previewUnitProps=null}previewConnections(e,t,i){this.rtConnections.clear(),this.rtConnections.beginDraw();for(const[s,r]of v(this.state,e,t,i.connectionRadius,!1)){if(!s.ref)continue;if(!s.ref.props.isRelay&&!i.isRelay)continue;if(r>s.ref.props.connectionRadius)continue;this.connectionSprite.setPosition(e*h+8,t*h+8);const o=Math.sqrt(Math.pow(this.connectionSprite.x-s.ref.x,2)+Math.pow(this.connectionSprite.y-s.ref.y,2));0!==Math.round(o)&&(this.connectionSprite.setTexture(M(this.scene,o)).setTint(65280),this.connectionSprite.setRotation(Math.atan2(s.ref.y-this.connectionSprite.y,s.ref.x-this.connectionSprite.x)),this.rtConnections.batchDraw(this.connectionSprite))}this.rtConnections.endDraw(),this.connectionSprite.setVisible(!1)}}class K extends Phaser.Scene{constructor(){super({key:"GameScene"}),this.observer=new Phaser.Events.EventEmitter,this.pointerX=null,this.pointerY=null,this.pointerCoordX=null}create(){this.sfx_place_structure=this.sound.add("place_structure",{detune:200,rate:1.25,volume:1,loop:!1}),this.scene.launch("GameUIScene",[this,()=>{this.scene.restart()}]),this.setupCameraAndInput(),this.observer.removeAllListeners(),D.initStatic(this),this.simulation=new _(this.observer,new B(this)),this.previewer=new L(this,this.simulation.state),setInterval((()=>this.simulation.step()),50),this.observer.on(n,(e=>this.selectUnit(e,!1)))}update(e,t){this.controls.update(t)}setupCameraAndInput(){const e=this.cameras.main,t=this.cameras.main.width/1920;e.setZoom(1*t),e.setBackgroundColor(3355443),e.centerOnX(h*f.sizeX/2),e.centerOnY(h*f.sizeY/2);const i=this.input.keyboard;if(!i)throw new Error("cursors is null");const s=i.addKey(Phaser.Input.Keyboard.KeyCodes.W),r=i.addKey(Phaser.Input.Keyboard.KeyCodes.A),o=i.addKey(Phaser.Input.Keyboard.KeyCodes.S),a=i.addKey(Phaser.Input.Keyboard.KeyCodes.D),n=i.addKey(Phaser.Input.Keyboard.KeyCodes.ONE),c=i.addKey(Phaser.Input.Keyboard.KeyCodes.TWO),d=i.addKey(Phaser.Input.Keyboard.KeyCodes.THREE),u=i.addKey(Phaser.Input.Keyboard.KeyCodes.FOUR),p=i.addKey(Phaser.Input.Keyboard.KeyCodes.FIVE),m=i.addKey(Phaser.Input.Keyboard.KeyCodes.SIX),y=i.addKey(Phaser.Input.Keyboard.KeyCodes.SEVEN),g=i.addKey(Phaser.Input.Keyboard.KeyCodes.ESC),C=i.addKey(Phaser.Input.Keyboard.KeyCodes.X),x=i.addKey(Phaser.Input.Keyboard.KeyCodes.P),S=i.addKey(Phaser.Input.Keyboard.KeyCodes.SPACE);this.controls=new Phaser.Cameras.Controls.SmoothedKeyControl({camera:e,up:s,left:r,down:o,right:a,zoomIn:i.addKey(Phaser.Input.Keyboard.KeyCodes.Q),zoomOut:i.addKey(Phaser.Input.Keyboard.KeyCodes.E),acceleration:10,drag:.1,maxSpeed:.75,maxZoom:2,minZoom:l,zoomSpeed:.05}),n.onDown=()=>this.selectUnit(0),c.onDown=()=>this.selectUnit(1),d.onDown=()=>this.selectUnit(2),u.onDown=()=>this.selectUnit(3),p.onDown=()=>this.selectUnit(4),m.onDown=()=>this.selectUnit(5),y.onDown=()=>this.selectUnit(6),g.onDown=()=>this.selectUnit(-1),C.onDown=()=>this.selectUnit(-1),x.onDown=()=>this.simulation.state.isPaused=!this.simulation.state.isPaused,S.onDown=()=>this.simulation.state.isPaused=!this.simulation.state.isPaused;const w=this.input;w.mousePointer.motionFactor=.5,w.pointer1.motionFactor=.5,w.on("pointermove",(e=>{const{worldX:t,worldY:i}=e;this.pointerX=t,this.pointerY=i;const s=Math.floor(t/h),r=Math.floor(i/h);e.isDown||!this.unitToPlace||this.pointerCoordX===s&&this.pointerCoordY===r||(this.previewer.previewEntity(s,r,this.unitToPlace),this.pointerCoordX=s,this.pointerCoordY=r)})),w.on("pointerdown",((e,t)=>{this.pointerCoordX=Math.floor(e.worldX/h),this.pointerCoordY=Math.floor(e.worldY/h);const{pointerCoordX:i,pointerCoordY:s}=this;if(null!==i&&null!==s&&!(i<0||s<0||i>f.sizeX||s>f.sizeY))if(this.unitToPlace){if(!E(i,s,this.simulation.state))return;this.sfx_place_structure.play(),new D(this.simulation,{active:!0,built:!1,xCoord:i,yCoord:s,props:this.unitToPlace})}else if(this.simulation.state.selectedEntityId){const e=this.simulation.state.entities.get(this.simulation.state.selectedEntityId);if(e?.props.movable){if(!e)throw new Error("selected entity not found");if(!E(i,s,this.simulation.state))return;e.moveTo(i,s)}else this.simulation.state.selectedEntityId=null}else{if(!t.length)return;const e=t[0].getData("id");if(console.log("select",e),"string"!=typeof e)return;this.simulation.state.selectedEntityId=e}})),w.on("wheel",((t,i,s,r)=>{const o=e.zoom-(r>0?.025:-.025),a=Phaser.Math.Clamp(o,l,2);e.zoom=a}))}selectUnit(e,t=!0){this.simulation.state.selectedEntityId=null;const i=F[e]||null;this.previewer.previewCancel(),this.previewer.previewEntity(this.pointerCoordX,this.pointerCoordY,i),this.unitToPlace=i,t&&this.observer.emit(n,e)}}class O extends Phaser.Scene{constructor(){super({key:"PreloadScene"})}preload(){this.load.audio("place_structure",["assets/audio/sfx/place_structure/click.wav"]),this.load.audio("start_collect",["assets/audio/sfx/start_collect/sharp_echo.wav"]),this.load.audio("attack_turret",["assets/audio/sfx/attack_turret/footstep_concrete_001.ogg"]),this.load.audio("theme",["assets/audio/music/Kevin MacLeod/Shadowlands 4 - Breath.mp3"]),this.load.html("dom_game_ui","assets/html/game_ui.html"),this.generateTextures()}create(){this.scene.start("GameScene")}generateTextures(){const e=this.add.graphics();e.fillStyle(255,1),S(e,24,24,12,21.6,24*.4),e.generateTexture("Emitter",48,48),e.clear(),e.fillStyle(11045156,1),e.lineStyle(2,0,1),S(e,72,72,8,67,57.6),e.fillStyle(14400599,1),S(e,72,72,8,40,72*.6),e.generateTexture("City",144,144),e.clear(),e.fillStyle(13882323,1),e.lineStyle(2,0,1),e.fillCircle(24,24,16),e.strokeCircle(24,24,15),e.fillStyle(16777215,1),e.fillCircle(24,24,8),e.strokeCircle(24,24,8),e.generateTexture("Collector",48,48),e.clear(),e.fillStyle(13882323,1),e.lineStyle(2,0,1),S(e,24,24,3,6.4*3,3.2*3),e.fillStyle(16777215,1),S(e,24,24,3,3.2*3,1.6*3),e.generateTexture("Relay",48,48),e.clear(),e.fillStyle(13882323,1),e.lineStyle(1,0,1),S(e,24,24,3,6.4*3,3.2*3),e.fillStyle(8874285,1),e.lineStyle(2,0,1),e.fillCircle(24,24,12.8),e.strokeCircle(24,24,11.8),e.generateTexture("Blaster",48,48),e.clear(),e.lineStyle(6.4,0,1),e.lineBetween(24,24,24,0),e.fillStyle(11045156,1),e.lineStyle(2,0,1),S(e,24,24,3,2.4*3,1.6*3),e.lineStyle(6.4-4,11045156,1),e.lineBetween(24,24,24,2),e.fillStyle(16777215,1),e.generateTexture("Blaster_top",48,48),e.clear();const t=this.add.renderTexture(0,0,48,48);t.draw("Blaster",0,0),t.draw("Blaster_top",0,0),t.snapshot((e=>{this.textures.addBase64("Blaster_ui",e.src),t.destroy()}));const i=24;e.fillStyle(13882323,1),e.lineStyle(1,0,1);const s=[{x:11,y:11},{x:32,y:h},{x:h,y:32}],r=[{x:37,y:11},{x:16,y:16},{x:32,y:32}],o=[{x:37,y:37},{x:32,y:h},{x:h,y:32}],a=[{x:11,y:37},{x:16,y:16},{x:32,y:32}];e.fillPoints(s,!0).strokePoints(s,!0),e.fillPoints(r,!0).strokePoints(r,!0),e.fillPoints(o,!0).strokePoints(o,!0),e.fillPoints(a,!0).strokePoints(a,!0),e.fillStyle(8874285,1),e.lineStyle(2,0,1),e.fillCircle(i,i,12.8),e.strokeCircle(i,i,11.8),e.fillStyle(7829367,1),e.fillCircle(i,i,6.4),e.strokeCircle(i,i,5.4),e.generateTexture("Mortar",48,48),e.clear(),e.fillStyle(16711680,1),S(e,24,24,4,2.4*3,1.2*3),e.generateTexture("Mortar_shell",48,48),e.clear(),e.fillStyle(1605400,1),e.lineStyle(2,0,1),e.fillCircle(24,24,16),e.strokeCircle(24,24,15),e.fillStyle(7829367,1),e.fillCircle(24,24,8),e.strokeCircle(24,24,8),e.generateTexture("Storage",48,48),e.clear(),e.fillStyle(3037570,1),e.lineStyle(2,0,1),S(e,24,24,4,24*.8-2,24*.35),e.generateTexture("Reactor",48,48),e.clear(),e.fillStyle(16711680,1),e.lineStyle(2,0,1),S(e,24,24,2,16,16),e.generateTexture("Speed",48,48),e.clear(),e.fillStyle(16777215,.4),e.lineStyle(1,13421772,1),e.fillRect(0,0,h,h),e.strokeRect(0,0,h,h),e.generateTexture("cell_white",h,h),e.clear(),e.fillStyle(16711680,.4),e.lineStyle(1,13421772,1),e.fillRect(0,0,h,h),e.strokeRect(0,0,h,h),e.generateTexture("cell_red",h,h),e.clear();const n=12.8;e.fillStyle(0,1),e.fillCircle(n,n,n),e.fillStyle(13882323,1),e.fillCircle(n,n,n-3.2),e.setScale(.5),e.generateTexture("energy",n,n),e.clear(),e.setScale(1),e.fillStyle(0,1),e.fillCircle(n,n,n),e.fillStyle(16711680,1),e.fillCircle(n,n,n-3.2),e.setScale(.5),e.generateTexture("energy_red",n,n),e.destroy()}}class z extends s.Scene{constructor(){super({key:"GameUIScene"})}init([e,t]){this.mainScene=e,this.observer=e.observer,this.restartGame=t,this.resolutionMod=this.game.canvas.width/1920}create(){this.initDomUi(),this.music=this.sound.add("theme",{loop:!0,volume:.2,rate:1,delay:0,detune:400}),this.music.play()}initDomUi(){const e=this.cameras.main.worldView.x+this.cameras.main.width/2,t=this.cameras.main.worldView.y+this.cameras.main.height/2,i=this.add.dom(e,t).createFromCache("dom_game_ui").setScale(this.resolutionMod);i.pointerEvents="none";const s=document.querySelector("#unit-selector"),l=document.getElementById("unit-template");Object.values(F).forEach(((e,t)=>{const i=l.content.cloneNode(!0),r=this.textures.getBase64(e.uiTextureKey);if(!r)throw new Error("Texture not found");i.querySelector(".unit-img").src=r,i.querySelector(".unit").id=e.unitName,i.querySelector(".unit-name").innerHTML=e.unitName,i.querySelector(".unit-cost").innerHTML=String(e.buildCost),i.querySelector(".unit-hotkey").innerHTML=String(t+1),s.appendChild(i),s.querySelector("#"+e.unitName).onclick=()=>this.observer.emit(n,t)}));const h=s.querySelectorAll(".unit");this.observer.on(n,(e=>{-1!==e?h.forEach(((t,i)=>i===e?t.classList.add("selected"):t.classList.remove("selected"))):h.forEach((e=>e.classList.remove("selected")))}));const c=document.querySelector("#energy-storage-text"),d=document.querySelector("#energy-storage-progress");this.observer.on(r,((e,t)=>{c.innerText=`${e.toFixed(1)}/${t}`,d.style.width=e/t*100+"%"}));const u=document.querySelector("#energy-production");this.observer.on(o,(e=>u.innerText=`+ ${e.toFixed(2)}`));const p=document.querySelector("#energy-consumption");return this.observer.on(a,(e=>p.innerText=`- ${e.toFixed(2)}`)),i}}const q={render:{antialiasGL:!1,batchSize:512},type:s.WEBGL,backgroundColor:"0xffffff",scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH,width:1920,height:1080},dom:{createContainer:!0},disableContextMenu:!0,parent:"game",scene:[O,K,z]};window.addEventListener("load",(()=>{new s.Game(q),function(){const e=document.createElement("script");e.type="application/javascript",e.onload=function(){const e=new Stats;document.body.appendChild(e.dom),requestAnimationFrame((function t(){e.update(),requestAnimationFrame(t)}))},e.src="./stats.js",document.head.appendChild(e)}()}));const F=[g.Collector,g.Relay,g.Blaster,g.Mortar,g.Storage,g.Speed,g.Reactor]}},i={};function s(e){var r=i[e];if(void 0!==r)return r.exports;var o=i[e]={exports:{}};return t[e].call(o.exports,o,o.exports,s),o.exports}s.m=t,e=[],s.O=(t,i,r,o)=>{if(!i){var a=1/0;for(c=0;c<e.length;c++){for(var[i,r,o]=e[c],n=!0,l=0;l<i.length;l++)(!1&o||a>=o)&&Object.keys(s.O).every((e=>s.O[e](i[l])))?i.splice(l--,1):(n=!1,o<a&&(a=o));if(n){e.splice(c--,1);var h=r();void 0!==h&&(t=h)}}return t}o=o||0;for(var c=e.length;c>0&&e[c-1][2]>o;c--)e[c]=e[c-1];e[c]=[i,r,o]},s.d=(e,t)=>{for(var i in t)s.o(t,i)&&!s.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e;s.g.importScripts&&(e=s.g.location+"");var t=s.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var i=t.getElementsByTagName("script");if(i.length)for(var r=i.length-1;r>-1&&!e;)e=i[r--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),s.p=e})(),(()=>{var e={179:0};s.O.j=t=>0===e[t];var t=(t,i)=>{var r,o,[a,n,l]=i,h=0;if(a.some((t=>0!==e[t]))){for(r in n)s.o(n,r)&&(s.m[r]=n[r]);if(l)var c=l(s)}for(t&&t(i);h<a.length;h++)o=a[h],s.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return s.O(c)},i=self.webpackChunkquantum_rumble_rts=self.webpackChunkquantum_rumble_rts||[];i.forEach(t.bind(null,0)),i.push=t.bind(null,i.push.bind(i))})();var r=s.O(void 0,[216],(()=>s(313)));r=s.O(r)})();